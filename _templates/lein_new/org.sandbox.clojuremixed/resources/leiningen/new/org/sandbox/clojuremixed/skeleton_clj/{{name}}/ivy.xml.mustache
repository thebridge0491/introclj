<?xml version = '1.0' encoding = 'UTF-8'?>
<!-- version range ex: [0.1.0,)  0.1.+  latest.release -->
<!-- ivy cmdln cmds: (1) resolve ; (2) cachepath ; (3) make pom ; (4) retrieve ;
  (5) deliverto ; (6) publish ; (7) (w/out ivy.xml) retrieve single depn
(1) java -jar ivy.jar [-settings ivysettings.xml] [-properties versions.properties]
  [-ivy ivy.xml]
(2) java -jar ivy.jar -confs compile -cachepath classpath_compile.txt
(3) java -jar ivy.jar -confs default,compile,runtime,test -makepom out-pom.xml
(4) java -jar ivy.jar -retrieve 'lib/[artifact]-[revision](-[classifier]).[ext]'
(5) java -jar ivy.jar -revision X.Y.Z -deliverto 'ivy-[revision].xml'
(6) java -jar ivy.jar [-overwrite] -revision X.Y.Z -deliverto 'ivy-[revision].xml'
  [-publishpattern '[artifact]-[revision](-[classifier]).[ext]']
  -publishpattern 'ivy-[revision].xml' -publish local
(7) java -jar ivy.jar -retrieve 'lib/[artifact]-[revision](-[classifier]).[ext]'
  [-notransitive] -dependency <organisation> <module> <revision>
-->
<!-- &var; to use as entity variable, example: &scala.lib; -->
<!-- % versions SYSTEM './src/main/resources/versions.xml' -->
<!-- % versions SYSTEM 'jar:file:./{parent}-{revision}.jar!/versions.xml' -->
<!--<!DOCTYPE ivy-module [
  <!ENTITY scala.lib '/usr/local/share/scala/lib'>
  <!ENTITY % versions SYSTEM 'jar:file:./{{parent}}{{^parent}}intro_jvm{{/parent}}-parent-{{version}}{{^version}}0.1.0{{/version}}.jar!/versions.xml'>

  %versions;
]>-->

<ivy-module version = '2.0'
    xmlns:xsi = 'http://www.w3.org/2001/XMLSchema-instance'
    xsi:noNamespaceSchemaLocation = 'http://ant.apache.org/ivy/schemas/ivy.xsd'
    xmlns:m = 'http://ant.apache.org/ivy/maven'>
  <info module = '{{name}}{{^name}}intro_jvm.util{{/name}}' revision = '{{version}}{{^version}}0.1.0{{/version}}'>
    <!--<extends location = '../parent/ivy.xml'-->
    <extends extendType = 'all' revision = '+'
        organisation = '{{groupid}}{{^groupid}}org.sandbox{{/groupid}}' module = '{{parent}}{{^parent}}intro_jvm{{/parent}}-parent'/>
    <license name = '{{license}}{{^license}}Apache-2.0{{/license}}'
      url = 'https://opensource.org/licenses/{{license}}{{^license}}Apache-2.0{{/license}}'/>
    <description homepage = 'https://{{repohost}}{{^repohost}}bitbucket.org{{/repohost}}/{{repoacct}}{{^repoacct}}imcomputer{{/repoacct}}/{{parent}}{{^parent}}intro_jvm{{/parent}}'>
      {{description}}{{^description}}Utilities sub-package for JVM language Intro examples project.{{/description}}
    </description>
  </info>
  <!--<configurations defaultconfmapping = 'default'>
    <conf name = 'default' description = 'runtime depns and master' extends = 'runtime,master'/>
    <conf name = 'master' description = 'module artifact itself only, no transitive depns'/>
    <conf name = 'compile' description = 'default compile depns'/>
    <conf name = 'runtime' description = 'runtime depns' extends = 'compile'/>
    <conf name = 'test' description = 'test depns' extends = 'runtime'/>

    <conf name = 'sources' description = 'module source artifact only'/>
    <conf name = 'javadoc' description = 'module javadoc artifact only'/>
    <conf name = 'optional' description = 'optional depns'/>
  </configurations>-->
  <!--<publications>
    <artifact name = '{{name}}{{^name}}intro_jvm.util{{/name}}' type = 'jar' ext = 'jar'
        conf = 'master'/>
    <artifact name = '{{name}}{{^name}}intro_jvm.util{{/name}}' type = 'test' ext = 'jar'
        conf = 'test' m:classifier = 'tests'/>
  </publications>-->
  <dependencies defaultconfmapping = '*->compile,master,default'
      defaultconf = 'compile'>

    <!--<dependency org = '{{groupid}}{{^groupid}}org.sandbox{{/groupid}}' name = '{{parent}}{{^parent}}intro_jvm{{/parent}}.util' rev = '{{version}}{{^version}}0.1.0{{/version}}'
        revConstraint = '[{{version}}{{^version}}0.1.0{{/version}},)'/>-->

    <exclude org = 'org.scala-lang' module = 'scala-library'/>
    <exclude org = 'org.scala-lang' module = 'scala-compiler'/>
    <exclude org = 'org.scalatest'/>
    <exclude org = 'org.scalacheck'/>
    <exclude org = 'com.beautiful-scala' module = "scalastyle_${scala.compat}"/>

    <exclude org = 'org.codehaus.groovy' module = 'groovy-all'/>
    <exclude org = 'org.spockframework' module = 'spock-core'/>
    <exclude org = 'org.codenarc' module = 'CodeNarc'/>

    <!--<exclude org = 'org.clojure' module = 'clojure'/>
    <exclude org = 'org.clojure' module = 'test.check'/>
    <exclude org = 'org.clojure' module = 'tools.reader'/>
    <exclude org = 'org.clojure' module = 'tools.logging'/>-->
    <exclude org = 'org.clojure' module = 'tools.cli'/>
    <exclude org = 'org.clojure' module = 'data.json'/>

    <exclude org = 'org.junit' module = 'junit-bom'/>
    <exclude org = 'org.junit.platform' module = 'junit-platform-console'/>
    <exclude org = 'org.junit.platform' module = 'junit-platform-suite'/>
    <exclude org = 'org.junit.jupiter' module = 'junit-jupiter'/>
    <exclude org = 'org.junit.platform' module = 'junit-platform-runner'/>
    <exclude org = 'org.junit.vintage' module = 'junit-vintage-engine'/>
    <exclude org = 'org.testng' module = 'testng'/>
    <!--<exclude org = 'com.puppycrawl.tools' module = 'checkstyle'/>-->

    <exclude org = 'org.slf4j' module = 'log4j-over-slf4j'/>
    <!--<exclude org = 'ch.qos.logback' module = 'logback-classic'/>-->

    <!--<exclude org = 'org.ini4j' module = 'ini4j'/>-->
    <exclude org = 'net.java.dev.jna' module = 'jna'/>
    <exclude org = 'javax.json' module = 'javax.json-api'/>
    <exclude org = 'org.glassfish' module = 'javax.json'/>
    <exclude org = 'org.yaml' module = 'snakeyaml'/>
    <exclude org = 'com.moandjiezana.toml' module = 'toml4j'/>
  </dependencies>
</ivy-module>
