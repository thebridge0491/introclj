package {{namespace}}{{^namespace}}org.sandbox.intro_groovy.util{{/namespace}}

import org.slf4j.Logger
import org.slf4j.LoggerFactory

/** DocComment:
 * <p>Brief description.</p> */
class Person {
	private static final Logger pracLogger = LoggerFactory.getLogger("prac")
	
    /** Constructor.
     * @param name - name of the person
     * @param age - age of the person */
    Person(String name, int age) {
        pracLogger.info("Person()")
        this.name = name
        this.age = age
    }
    Person() { this("ToDo", 10)
    }
    
    private boolean equalObjects(Person other) {
        def isEqual = true
        
        //isEqual &= Double.doubleToLongBits(this.dblNum) == 
        //        Double.doubleToLongBits(other.dblNum)
        isEqual &= (null != this.name) ? this.name.equals(other.name) : 
                null == other.name
        isEqual &= this.age == other.age
        //isEqual &= Arrays.equals(this.intArr, other.intArr)
        
        return isEqual
    }
    @Override
    boolean equals(Object obj) {
        if (obj == this)
            return true
        if (null == obj || getClass() != obj.getClass())
            return false
        return equalObjects((Person)obj)
    }
    
    @Override
    int hashCode() {
        final def prime = 31
        def hash = 17
        //def d_Bits = Double.doubleToLongBits(this.dblNum)
        
        //hash = prime * hash + (int)(d_Bits ^ (d_Bits >>> 32))
        hash = prime * hash + ((null != this.name) ? this.name.hashCode() : 0)
        hash = prime * hash + this.age
        //hash = prime * hash + Arrays.hashCode(this.intArr)
        
        return hash
    }
    
    @Override
    String toString() {
        return sprintf("%s{name=%s, age=%d}", this.getClass().getSimpleName(),
			this.name, this.age)
    }
    
    String name
    int age
}
