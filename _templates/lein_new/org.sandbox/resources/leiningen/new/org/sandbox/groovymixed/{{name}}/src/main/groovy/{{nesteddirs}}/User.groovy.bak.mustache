package {{namespace}}{{^namespace}}org.sandbox.intro_groovy.util{{/namespace}}

/** DocComment:
 * <p>Brief description.</p> */
class User {
    /** Constructor.
     * @param name - name of the user
     * @param num - random number assigned to user
     * @param timeIn - time started for user, in milliseconds */
    User(String name, int num, long timeIn) {
        this.name = name
        this.num = num
        this.timeIn = timeIn
    }
    User() { this("World", 5, 0)
    }
    
    private boolean equalObjects(User other) {
        return (this.name.equals(other.name) || this.name == other.name) &&
            this.num == other.num && this.timeIn == other.timeIn //&&
            //Double.doubleToLongBits(this.dblNum) ==
            //        Double.doubleToLongBits(other.dblNum) &&
            //Arrays.equals(this.intArr, other.intArr)
    }
    @Override
    boolean equals(Object obj) {
        if (obj == this)
            return true
        if (null == obj || getClass() != obj.getClass())
            return false
        return equalObjects((User)obj)
    }
    
    @Override
    int hashCode() {
        final def primeMul = 31
        def primeAdd = 17
        //def d_Bits = Double.doubleToLongBits(this.dblNum)
        return primeMul * (
            //primeMul * (
            //    primeMul * (primeAdd + Arrays.hashCode(this.intArr)) +
            //    primeAdd + (int)(d_Bits ^ (d_Bits >>> 32)) +
                primeAdd + this.num + (int)this.timeIn) +
            primeAdd + ((null != this.name) ? this.name.hashCode() : 0)
    }
    
    @Override
    String toString() {
        return sprintf("%s{name=%s, num=%d, timeIn=%d}", 
			this.getClass().getSimpleName(), this.name, this.num, this.timeIn)
    }
    
    String name
    int num
    long timeIn
}
